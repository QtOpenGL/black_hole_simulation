#version 320 es

#define UINT_MAX 4294967295

#include "mwc64x_rng.comp"

uniform uint nSamples;
uniform uint off;

layout(binding = 0) buffer samplesBuf { float samples[]; };

layout(local_size_x = 0x10, local_size_y = 0x10) in;
void main() {
  uint g = gl_GlobalInvocationID.x;
  uint gsize = gl_NumWorkGroups.x * gl_WorkGroupSize.x;
  uint perKernel = nSamples / gsize + 1;

  #define STREAM_GAP 1099511627U
  vec2 state;
  MWC64X_SeedStreams(&state, off, STREAM_GAP);

  for (int i = 0; i < perKernel; i++) {
    samples[g * perKernel + i] = float(MWC64X_NextUint(&state)) / float(UINT_MAX);
  }
}