#version 320 es

#define UINT_MAX 0xFFFFFFFFU

#include "uint64.comp"
#include "skip_mwc.comp"
#include "mwc64x_rng.comp"

uniform uint nSamples;
uniform uvec2 off;

layout(binding = 0) buffer samplesBuf { float samples[]; };

layout(local_size_x = 64, local_size_y = 1) in;
void main() {
  uint g = gl_GlobalInvocationID.x;
  uint gsize = gl_NumWorkGroups.x * gl_WorkGroupSize.x;
  uint perKernel = nSamples / gsize + uint(nSamples % gsize != 0U);

  uvec2 rng;
  MWC64X_SeedStreams(rng, off, uint64_fromUint(perKernel), g);
  for (uint i = 0U; i < perKernel; ++i) {
    if (g * perKernel + i >= nSamples)
      continue;
    samples[g * perKernel + i] = float(MWC64X_NextUint(rng)) / float(UINT_MAX);
  }
}
